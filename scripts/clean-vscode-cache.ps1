# scripts/clean-vscode-cache.ps1 - Limpiar cach√© de VS Code

Write-Host "üßπ Limpiando cach√© de VS Code..." -ForegroundColor Yellow

# Verificar que VS Code est√© cerrado
$codeProcesses = Get-Process | Where-Object {$_.ProcessName -like "*Code*"}
if ($codeProcesses) {
    Write-Host "‚ö†Ô∏è  VS Code est√° ejecut√°ndose. Cerrando procesos..." -ForegroundColor Yellow
    $codeProcesses | Stop-Process -Force
    Start-Sleep -Seconds 3
}

# Rutas de cach√© de VS Code
$userProfile = $env:USERPROFILE
$appData = $env:APPDATA

$cachePaths = @(
    "$appData\Code\User\workspaceStorage",
    "$appData\Code\logs",
    "$appData\Code\CachedExtensions",
    "$appData\Code\CachedExtensionVSIXs",
    "$userProfile\.vscode\extensions\.obsolete"
)

foreach ($path in $cachePaths) {
    if (Test-Path $path) {
        Write-Host "üóëÔ∏è  Eliminando: $path" -ForegroundColor Cyan
        Remove-Item -Recurse -Force $path -ErrorAction SilentlyContinue
    }
}

# Limpiar archivos temporales del proyecto
Write-Host "üßπ Limpiando archivos temporales del proyecto..." -ForegroundColor Yellow

$projectTempPaths = @(
    "node_modules\.cache",
    "backend\node_modules\.cache",
    ".eslintcache",
    "cypress\videos",
    "cypress\screenshots",
    "dist",
    "build"
)

foreach ($path in $projectTempPaths) {
    if (Test-Path $path) {
        Write-Host "üóëÔ∏è  Eliminando: $path" -ForegroundColor Cyan
        Remove-Item -Recurse -Force $path -ErrorAction SilentlyContinue
    }
}

Write-Host "‚úÖ Limpieza completada!" -ForegroundColor Green
Write-Host "üîÑ Reinicia VS Code para aplicar cambios" -ForegroundColor Yellow
