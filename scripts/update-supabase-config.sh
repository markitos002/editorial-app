#!/bin/bash
# scripts/update-supabase-config.sh - Actualizar configuraci√≥n con datos correctos

echo "üîß Actualizando configuraci√≥n de Supabase..."

# Solicitar datos correctos al usuario
echo "üìù Ingresa los datos correctos de tu proyecto Supabase:"
echo ""
read -p "üè† HOST (ej: db.abcdefghijklmnop.supabase.co): " SUPABASE_HOST
read -p "üîë PASSWORD: " SUPABASE_PASSWORD
read -p "üìÅ PROJECT REF (ej: abcdefghijklmnop): " PROJECT_REF

# Validar que no est√©n vac√≠os
if [ -z "$SUPABASE_HOST" ] || [ -z "$SUPABASE_PASSWORD" ] || [ -z "$PROJECT_REF" ]; then
  echo "‚ùå Todos los campos son obligatorios"
  exit 1
fi

echo ""
echo "üîÑ Actualizando archivos de configuraci√≥n..."

# Actualizar render-supabase.yaml
sed -i "s|db\..*\.supabase\.co|$SUPABASE_HOST|g" render-supabase.yaml
sed -i "s|value: VqX2KgTvTZLrOWlq|value: $SUPABASE_PASSWORD|g" render-supabase.yaml
sed -i "s|postgresql://postgres:.*@|postgresql://postgres:$SUPABASE_PASSWORD@|g" render-supabase.yaml

# Actualizar script de importaci√≥n
sed -i "s|SUPABASE_HOST=\".*\"|SUPABASE_HOST=\"$SUPABASE_HOST\"|g" scripts/import-to-supabase.sh
sed -i "s|SUPABASE_PASSWORD=\".*\"|SUPABASE_PASSWORD=\"$SUPABASE_PASSWORD\"|g" scripts/import-to-supabase.sh

# Actualizar script de test
sed -i "s|host: 'db\..*\.supabase\.co'|host: '$SUPABASE_HOST'|g" scripts/test-supabase-connection.js
sed -i "s|password: '.*'|password: '$SUPABASE_PASSWORD'|g" scripts/test-supabase-connection.js

echo "‚úÖ Configuraci√≥n actualizada"
echo ""
echo "üß™ Ahora puedes probar la conexi√≥n:"
echo "   ./scripts/import-to-supabase.sh"
